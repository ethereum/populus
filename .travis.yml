language: python
python:
  - "3.5"
dist: trusty
sudo: required
env:
  global:
    - SOLC_BASE_INSTALL_PATH=$TRAVIS_BUILD_DIR
    - GETH_BASE_INSTALL_PATH=$TRAVIS_BUILD_DIR
    - CHAIN_SYNC_BLOCK_DELTA=100
    - GOROOT=/usr/lib/go-1.7
    - PYTEST_ADDOPTS="-n 2"
  matrix:
    # Solc 0.4.8
    - SOLC_VERSION=v0.4.8 TOX_POSARGS="-e py27-stdlib -e py34-stdlib -e py35-stdlib" GETH_VERSION=v1.6.6
    # Solc 0.4.11
    - SOLC_VERSION=v0.4.11 TOX_POSARGS="-e py27-stdlib -e py34-stdlib -e py35-stdlib" GETH_VERSION=v1.6.6
    # Solc 0.4.12
    - SOLC_VERSION=v0.4.12 TOX_POSARGS="-e py27-stdlib -e py34-stdlib -e py35-stdlib" GETH_VERSION=v1.6.6
    # Solc 0.4.13
    - SOLC_VERSION=v0.4.13 TOX_POSARGS="-e py27-stdlib -e py34-stdlib -e py35-stdlib" GETH_VERSION=v1.6.6
    # Linting
    - TOX_POSARGS="-e flake8"
cache:
  - pip: true
  - directories:
    - $HOME/.ethash/
before_install:
  # geth build dependencies
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo add-apt-repository -y ppa:gophers/archive; fi
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo apt-get update; fi
  - if [ -n "$GETH_VERSION" ]; then travis_retry sudo apt-get install -y --allow-unauthenticated golang-1.7 build-essential; fi
  - if [ -n "$GETH_VERSION" ]; then mkdir -p $HOME/.ethash; fi
install:
  # solc
  - if [ -n "$SOLC_VERSION" ]; then travis_retry pip3 install "py-solc>=1.2.0"; fi
  - if [ -n "$SOLC_VERSION" ]; then python3 -m solc.install $SOLC_VERSION; fi
  - if [ -n "$SOLC_VERSION" ]; then export SOLC_BINARY="$SOLC_BASE_INSTALL_PATH/solc-$SOLC_VERSION/bin/solc"; fi
  - if [ -n "$SOLC_VERSION" ]; then export LD_LIBRARY_PATH="$SOLC_BASE_INSTALL_PATH/solc-$SOLC_VERSION/bin"; fi
  # geth
  - if [ -n "$GETH_VERSION" ]; then travis_retry pip3 install "py-geth>=1.9.0"; fi
  - if [ -n "$GETH_VERSION" ]; then python3 -m geth.install $GETH_VERSION; fi
  - if [ -n "$GETH_VERSION" ]; then export GETH_BINARY="$GETH_BASE_INSTALL_PATH/geth-$GETH_VERSION/bin/geth"; fi
  # package
  - travis_retry pip install setuptools --upgrade
  - travis_retry pip install tox
before_script:
  # solc
  - if [ -n "$SOLC_BINARY" ]; then $SOLC_BINARY --version; fi
  # geth
  - if [ -n "$GETH_BINARY" ]; then $GETH_BINARY version; fi
  - mkdir -p $HOME/.ethash
script:
  - env
  - tox $TOX_POSARGS
after_script:
  - cat .tox/$TOX_POSARGS/log/*.log
